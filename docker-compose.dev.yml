version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AUTH_API_ADDRESS=http://auth-api:8081
      - TODOS_API_ADDRESS=http://todos-api:8082
      - USERS_API_ADDRESS=http://users-api:8083
      - HOST=0.0.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - auth-api
      - todos-api
      - users-api
    command: sh -c "npm run dev -- --host 0.0.0.0"
    networks:
      - web

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
    depends_on:
      - users-api
    networks:
      - web

  todos-api:
    build:
      context: ./todos-api
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis-queue
    networks:
      - web

  users-api:
    build:
      context: ./users-api
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
    networks:
      - web

  log-message-processor:
    build:
      context: ./log-message-processor
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis-queue
    networks:
      - web

  redis-queue:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - web

networks:
  web:
    driver: bridge

volumes:
  redis-data:
